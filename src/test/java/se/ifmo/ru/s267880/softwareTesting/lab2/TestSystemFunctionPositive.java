package se.ifmo.ru.s267880.softwareTesting.lab2;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import se.ifmo.ru.s267880.softwareTesting.lab2.math.*;

import java.util.Arrays;
import java.util.Collection;

import static org.junit.Assert.assertEquals;

@RunWith(Parameterized.class)
public class TestSystemFunctionPositive extends FunctionTest {
    // there are 2 ranges:
    // small range:  [0.25, 10) with step 0.25
    // big range: [10, 100) with step 5
    // at 0 the function is undefined.

    @Parameterized.Parameters(name = PARAM_NAME)
	public static Collection wrappedData() {
		return Arrays.asList(new Object[][] {
		        // table[{x, NumberForm[(((((ln(x) ^ 3) + log_2(x)) - log_2(x)) + log_2(x)) ^ 2), {30, 10}]}, {x, 0.25, 9.9, 0.25}]
				{0.25, 21.7547356689}, {0.5, 1.7769547228}, {0.75, 0.1925861172}, {1., 0.0000000000}, {1.25, 0.1109150366},
				{1.5, 0.4246109138}, {1.75, 0.9655218290}, {2., 1.7769547228}, {2.25, 2.9008870023}, {2.5, 4.3732656829},
				{2.75, 6.2232270252}, {3., 8.4735219699}, {3.25, 11.1413078469}, {3.5, 14.2390002618}, {3.75, 17.7750686337},
				{4., 21.7547356689}, {4.25, 26.1805737604}, {4.5, 31.0530049034}, {4.75, 36.3707156345}, {5., 42.1309994811},
				{5.25, 48.3300386655}, {5.5, 54.9631354306}, {5.75, 62.0249018264}, {6., 69.5094153500}, {6.25, 77.4103465565},
				{6.5, 85.7210636639}, {6.75, 94.4347182686}, {7., 103.5443155335}, {7.25, 113.0427715999}, {7.5, 122.9229604713},
				{7.75, 133.1777522091}, {8., 143.8000439510}, {8.25, 154.7827849910}, {8.5, 166.1189969425}, {8.75, 177.8017898250},
				{9., 189.8243747701}, {9.25, 202.1800739219}, {9.5, 214.8623280100}, {9.75, 227.8647019908},

                // table[{x, NumberForm[N[(((((ln(x) ^ 3) + log_2(x)) - log_2(x)) + log_2(x)) ^ 2)], {30, 10}]}, {x, 10, 99.9, 5}]
				{10, 241.1808890870}, {15, 564.8452836305}, {20, 973.8683185550}, {25, 1443.6313250436}, {30, 1958.2775978417},
				{35, 2507.0709541242}, {40, 3082.4236077784}, {45, 3678.7837986042}, {50, 4291.9739931886}, {55, 4918.7777184278},
				{60, 5556.6707893781}, {65, 6203.6402697560}, {70, 6858.0588571466}, {75, 7518.5954782530}, {80, 8184.1502384887},
				{85, 8853.8061721056}, {90, 9526.7928425030}, {95, 10202.4584669009}
				} );
	}

    // above the values are the command for wolfram alpha
	static final TrigonometricMath trigMathStub = new TrigonometricMathBuilder().build();  // don't need this
    static final LogarithmMath logMathStub = new LogarithmMathBuilder()
            .setLn(new FunctionStub()
                    .addValues(new double[][]
						// table[{x,  NumberForm[N[ln(x)], {30, 10}]}, {x, 0.25, 9.9, 0.25}]
                        {{0.25, -1.3862943611}, {0.5, -0.6931471806}, {0.75, -0.2876820725}, {1., 0.0000000000},
						{1.25, 0.2231435513}, {1.5, 0.4054651081}, {1.75, 0.5596157879}, {2., 0.6931471806},
						{2.25, 0.8109302162}, {2.5, 0.9162907319}, {2.75, 1.0116009117}, {3., 1.0986122887},
						{3.25, 1.1786549963}, {3.5, 1.2527629685}, {3.75, 1.3217558400}, {4., 1.3862943611},
						{4.25, 1.4469189829}, {4.5, 1.5040773968}, {4.75, 1.5581446180}, {5., 1.6094379124},
						{5.25, 1.6582280766}, {5.5, 1.7047480922}, {5.75, 1.7491998548}, {6., 1.7917594692},
						{6.25, 1.8325814637}, {6.5, 1.8718021769}, {6.75, 1.9095425049}, {7., 1.9459101491},
						{7.25, 1.9810014689}, {7.5, 2.0149030205}, {7.75, 2.0476928434}, {8., 2.0794415417},
						{8.25, 2.1102132003}, {8.5, 2.1400661635}, {8.75, 2.1690537004}, {9., 2.1972245773},
						{9.25, 2.2246235515}, {9.5, 2.2512917986}, {9.75, 2.2772672850}} )
                    .addValues(new double[][]
							// table[{x,  NumberForm[N[ln(x)], {30, 10}]}, {x, 10, 99.9, 5}]
						{{10, 2.3025850930}, {15, 2.7080502011}, {20, 2.9957322736}, {25, 3.2188758249},
						{30, 3.4011973817}, {35, 3.5553480615}, {40, 3.6888794541}, {45, 3.8066624898},
						{50, 3.9120230054}, {55, 4.0073331852}, {60, 4.0943445622}, {65, 4.1743872699},
						{70, 4.2484952420}, {75, 4.3174881135}, {80, 4.3820266347}, {85, 4.4426512565},
						{90, 4.4998096703}, {95, 4.5538768916}} ) )
            .setLog2(new FunctionStub()
					.addValues(new double[][]
                            // table[{x,  NumberForm[N[log_2(x)], {30, 10}]}, {x, 0.25, 9.9, 0.25}]
						{{0.25, -2.0000000000}, {0.5, -1.0000000000}, {0.75, -0.4150374993}, {1., 0.0000000000},
						{1.25, 0.3219280949}, {1.5, 0.5849625007}, {1.75, 0.8073549221}, {2., 1.0000000000},
						{2.25, 1.1699250014}, {2.5, 1.3219280949}, {2.75, 1.4594316186}, {3., 1.5849625007},
						{3.25, 1.7004397181}, {3.5, 1.8073549221}, {3.75, 1.9068905956}, {4., 2.0000000000},
						{4.25, 2.0874628413}, {4.5, 2.1699250014}, {4.75, 2.2479275134}, {5., 2.3219280949},
						{5.25, 2.3923174228}, {5.5, 2.4594316186}, {5.75, 2.5235619561}, {6., 2.5849625007},
						{6.25, 2.6438561898}, {6.5, 2.7004397181}, {6.75, 2.7548875022}, {7., 2.8073549221},
						{7.25, 2.8579809951}, {7.5, 2.9068905956}, {7.75, 2.9541963104}, {8., 3.0000000000},
						{8.25, 3.0443941194}, {8.5, 3.0874628413}, {8.75, 3.1292830169}, {9., 3.1699250014},
						{9.25, 3.2094533656}, {9.5, 3.2479275134}, {9.75, 3.2854022189}} )
					.addValues(new double[][]
                            // table[{x,  NumberForm[N[log_2(x)], {30, 10}]}, {x, 10, 99.9, 5}]
						{{10, 3.3219280949}, {15, 3.9068905956}, {20, 4.3219280949}, {25, 4.6438561898},
						{30, 4.9068905956}, {35, 5.1292830169}, {40, 5.3219280949}, {45, 5.4918530963},
						{50, 5.6438561898}, {55, 5.7813597135}, {60, 5.9068905956}, {65, 6.0223678130},
						{70, 6.1292830169}, {75, 6.2288186905}, {80, 6.3219280949}, {85, 6.4093909361},
						{90, 6.4918530963}, {95, 6.5698556083}} )
			)
            .build();

	static final SystemFunction sysFunc = new SystemFunction(trigMathStub, logMathStub);

    public TestSystemFunctionPositive(double x, double result) {
        super(x, result, sysFunc);
	}
}
